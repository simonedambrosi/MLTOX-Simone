cas = read.csv('dataset/only_cas.csv',header = T)
cas = read.csv('dataset\only_cas.csv',header = T)
library(readr)
cas <- read_csv("C:/Users/Simone/Desktop/TESI -- lavoro/Script per tesi/dataset/only_cas.csv",
col_types = cols(X1 = col_skip()))
cas <- read_csv("C:/Users/Simone/Desktop/TESI -- lavoro/Script per tesi/dataset/only_cas.csv",
col_types = cols(X1 = col_skip()))
install.packages('webchem')
library('webchem')
?cir_query
to_smiles <- function(num){
r <- cir_query(num, 'smiles')
return(r[[1]])
}
#FROM DF TO MATRIX
cas_matrix <- as.matrix(cas$cas)
#WE APPLY THE FUNTION TO EACH ELEMENT
smiles <- apply(cas_matrix, 1, to_smiles)
library(readr)
cas_smiles <- read_csv("C:/Users/Simone/Desktop/TESI -- lavoro/Script per tesi/dataset/cas_to_smiles.csv",
col_types = cols(X1 = col_skip()))
cas = c(cas)
is.vector(cas)
cas[1]
cas[[1]]
# importo i cas number e la libreria webchem
cas <- read_csv("C:/Users/Simone/Desktop/TESI -- lavoro/Script per tesi/dataset/only_cas.csv", col_types = cols(X1 = col_skip()))
cas = as.vector(cas)
cas[1]
cas[1,]
cas <- cas[c("cas")]
cas[1,]
cas[1,]
cir_query(cas[1,])
a = cir_query(cas[1,])
a = cir_query(cas[1,], resolver = 'smiles')
a = cir_query(cas[1,], resolver = 'name_by_cir')
a = cir_query(cas[1,], resolver = 'name_by_chemspider')
a = cir_query(cas[1,],representation = 'cas', resolver = 'name_by_chemspider')
a = cir_query(cas[1,],representation = 'cas')
a = cir_query(cas[1,],representation = 'smiles')
a = cir_query(cas[1,],representation = 'smiles', \resolver = 'name_pattern')
a = cir_query(cas[1,],representation = 'smiles', resolver = 'name_pattern')
a = cir_query(cas[1,],representation = 'smiles', resolver = 'cas_number')
a = cir_query(cas[4,],representation = 'smiles', resolver = 'cas_number')
a = cir_query(cas[4,],representation = 'smiles', resolver = 'name_by_chemspider')
a = cir_query(cas[1,],representation = 'smiles', resolver = c('name_by_chemspider', 'cas_number'))
a = cir_query(cas[1,],representation = 'smiles', resolver = 'cas_number')
View(cas_matrix)
a = cir_query(cas[1,])[[1]]
ci_query(cas[1,])
?ci_query
cas[1,]
ci_query(cas[1,]$cas)
cas[1,]$cas
ci_query('Cadmium chloride', type = 'name')
a = ci_query('Cadmium chloride', type = 'name')
a$`Cadmium chloride`$smiles
cas <- read_csv("C:/Users/Simone/Desktop/TESI -- lavoro/Script per tesi/dataset/only_cas.csv", col_types = cols(X1 = col_skip()))
# importo i cas number e la libreria webchem
library('readr')
cas <- read_csv("C:/Users/Simone/Desktop/TESI -- lavoro/Script per tesi/dataset/only_cas.csv", col_types = cols(X1 = col_skip()))
cas_smiles <- read_csv("C:/Users/Simone/Desktop/TESI -- lavoro/Script per tesi/dataset/cas_to_smiles.csv", col_types = cols(X1 = col_skip()))
library('webchem')
to_smiles <- function(num){
r <- cir_query(num, 'smiles')
return(r[[1]])
}
#FROM DF TO MATRIX
cas_matrix <- as.matrix(cas$cas)
#WE APPLY THE FUNTION TO EACH ELEMENT
smiles <- apply(cas_matrix, 1, to_smiles)
?cir_query
cir_query(cas[1,], representation = 'mw')
cir_query(cas[1,], representation = 'mw')
cir_query(cas[1,], representation = 'mw')[[1]]
mw <- apply(cas_matrix[1:4,], 1, massWeight)
# peso molecolare
massWeight <- function(num){
mw <- cir_query(num, representation = 'mw')
return(mw[[1]])
}
mw <- apply(cas_matrix[1:4,], 1, massWeight)
mw <- apply(cas_matrix, 1, massWeight)
df <- as.data.frame(mw)
cas_mw = data.frame(cas,df)
write.csv(cas_mw, 'cas_mw.csv')
# kow index
kow <- function(num){
k <- cir_query(num, representation = 'xlogp2')
return(k[[1]])
}
k <- apply(cas_matrix,1, kow)
# water solubility sta in pan_query()
pan_query('10108-64-2')
# water solubility sta in pan_query()
a = pan_query('10108-64-2')
str(a)
a$`10108-64-2`$`Water Solubility (Avg, mg/L)`
# water solubility sta in pan_query()
a = pan_query('88-30-2')
a$`88-30-2`$`Water Solubility (Avg, mg/L)`
library(readr)
cas_na_mw <- read_csv("C:/Users/Simone/Desktop/TESI -- lavoro/Script per tesi/dataset_prova/cas_na_mw.csv",
col_types = cols(X1 = col_skip()))
molWeight <- function(num){
mw <- cir_query(num, representation = 'mw')
return(mw[[1]])
}
cas_matrix <- as.matrix(cas_na_mw$cas)
cas_matrix <- as.matrix(cas_na_mw$cas)
mw <- apply(cas_matrix, 1, molWeight)
library('webchem')
mw <- apply(cas_matrix, 1, molWeight)
df <- as.data.frame(mw)
cas_find_mw <- data.frame(cas_na_mw, df)
write.csv(cas_mw, 'cas_find_mw.csv')
write.csv(cas_find_mw, 'cas_find_mw.csv')
